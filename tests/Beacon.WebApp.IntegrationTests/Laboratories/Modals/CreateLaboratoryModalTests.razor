@using Beacon.Common.Requests.Laboratories
@using BeaconUI.Core.Laboratories.Modals
@inherits BeaconTestContext
@code  {

    [Fact]
    public async Task CreateLaboratoryModal_DoesNotCallApi_WhenModelIsInvalid()
    {
        MockApi.Setup<CreateLaboratoryRequest>();

        var sut = RenderModal();
        _ = ModalService.Show<CreateLaboratoryModal>();

        sut.WaitForElement("input#lab-name", TimeSpan.FromSeconds(5)).Change("");
        await sut.Find("form").SubmitAsync();

        sut.WaitForAssertion(() => sut.Find(".validation-message"), TimeSpan.FromSeconds(10));
        MockApi.Verify<CreateLaboratoryRequest>(Times.Never());
    }

    [Fact]
    public async Task CreateLaboratoryModal_CallsApi_WhenModelIsValid()
    {
        MockApi.Setup<CreateLaboratoryRequest>();

        var sut = RenderModal();
        _ = ModalService.Show<CreateLaboratoryModal>();

        sut.WaitForElement("input#lab-name", TimeSpan.FromSeconds(5)).Change("My New Lab");
        await sut.Find("form").SubmitAsync();

        sut.WaitForAssertion(() => MockApi.Verify<CreateLaboratoryRequest>(Times.Once()), TimeSpan.FromSeconds(10));
    }
}