name: .NET

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'tools/**'
      - '.github/workflows/dotnet.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'tools/**'
      - '.github/workflows/dotnet.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test-mssql:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        
    # API Tests for MsSqlServer
    - name: Restore API dependencies
      run: dotnet restore tests/Beacon.API.IntegrationTests/Beacon.API.IntegrationTests.csproj
    - name: Build API
      run: dotnet build tests/Beacon.API.IntegrationTests/Beacon.API.IntegrationTests.csproj --no-restore
    - name: Test API with coverage (MsSqlServer)
      run: dotnet test tests/Beacon.API.IntegrationTests/Beacon.API.IntegrationTests.csproj --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./TestResults/ /p:ExcludeByFile="**/Migrations/*.cs"
      env:
          BEACON_STORAGE_PROVIDER: MsSqlServer
    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-mssql
        path: ./**/TestResults/

  test-postgres:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        
    # API Tests for Postgres
    - name: Restore API dependencies
      run: dotnet restore tests/Beacon.API.IntegrationTests/Beacon.API.IntegrationTests.csproj
    - name: Build API
      run: dotnet build tests/Beacon.API.IntegrationTests/Beacon.API.IntegrationTests.csproj --no-restore
    - name: Test API with coverage (Postgres)
      run: dotnet test tests/Beacon.API.IntegrationTests/Beacon.API.IntegrationTests.csproj --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./TestResults/ /p:ExcludeByFile="**/Migrations/*.cs" 
      env:
          BEACON_STORAGE_PROVIDER: Postgres
    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-postgres
        path: ./**/TestResults/

  test-blazor:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        
    # Blazor Tests
    - name: Restore Blazor dependencies
      run: dotnet restore tests/Beacon.WebApp.IntegrationTests/Beacon.WebApp.IntegrationTests.csproj
    - name: Build Blazor
      run: dotnet build tests/Beacon.WebApp.IntegrationTests/Beacon.WebApp.IntegrationTests.csproj --no-restore
    - name: Test Blazor with coverage
      run: dotnet test tests/Beacon.WebApp.IntegrationTests/Beacon.WebApp.IntegrationTests.csproj --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./TestResults/
    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-blazor
        path: ./**/TestResults/
    
  generate-report:
    runs-on: ubuntu-latest
    needs: [test-mssql, test-postgres, test-blazor]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Download coverage artifacts
    - name: Download coverage artifact (MsSqlServer)
      uses: actions/download-artifact@v4
      with:
        name: coverage-mssql
        path: ./TestResults/
    - name: Download coverage artifact (Postgres)
      uses: actions/download-artifact@v4
      with:
        name: coverage-postgres
        path: ./TestResults/
    - name: Download coverage artifact (Blazor)
      uses: actions/download-artifact@v4
      with:
        name: coverage-blazor
        path: ./TestResults/

    # Generate Combined Report
    - name: Generate Coverage Report
      uses: danielpalme/ReportGenerator-GitHub-Action@5.2.0
      with:
        reports: './**/coverage.cobertura.xml'
        targetdir: 'coveragereport'
        reporttypes: 'HtmlInline'
        
    # Upload coverage report as artifact (available for all branches/PRs)
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coveragereport
        retention-days: 14

    # Upload to Codecov
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        fail_ci_if_error: true
        files: ./TestResults/coverage.cobertura.xml
        token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    needs: generate-report
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    # Setup Pages
    - name: Setup Pages
      uses: actions/configure-pages@v4

    # Download the coverage report artifact
    - name: Download coverage report
      uses: actions/download-artifact@v4
      with:
        name: coverage-report
        path: coveragereport

    # Upload for GitHub Pages
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: coveragereport

    # Deploy to GitHub Pages
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  build-maui:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Restore dependencies
      run: dotnet restore src/Client/BeaconUI.DesktopApp/BeaconUI.DesktopApp.csproj
    - name: Build
      run: dotnet build src/Client/BeaconUI.DesktopApp/BeaconUI.DesktopApp.csproj --no-restore
#    - name: Test
#      run: dotnet test src/YourMauiProject --no-build --verbosity normal
