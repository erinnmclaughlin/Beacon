<BeaconForm Model="Request" OnValidSubmit="Submit">
    <Modal DisableScroll="true">
        <div class="modal-body">
            <div class="field">
                <label for="title">Event name</label>
                <InputText @bind-Value="Request.Title" class="form-control" id="title" placeholder="e.g., My Awesome Event" />
                <ValidationMessage For="() => Request.Title" />
            </div>
            <div class="field">
                <label for="description">Description</label>
                <InputTextArea @bind-Value="Request.Description" class="form-control" id="description" placeholder="Event details..."></InputTextArea>
                <ValidationMessage For="() => Request.Description" />
            </div>
            <div class="field">
                <label for="startDate">Starts on</label>
                <div class="input-group">
                    <InputDate Type="InputDateType.Date" Value="Request.ScheduledStart" ValueChanged="(DateTimeOffset v) => UpdateStartDate(DateOnly.FromDateTime(v.DateTime))" ValueExpression="() => Request.ScheduledStart" class="form-control" id="startDate" />
                    <InputDate Type="InputDateType.Time" Value="Request.ScheduledStart" ValueChanged="(DateTimeOffset v) => UpdateStartTime(TimeOnly.FromDateTime(v.DateTime))" ValueExpression="() => Request.ScheduledStart" class="form-control" id="startTime" />
                </div>
                <ValidationMessage For="() => Request.ScheduledStart" />
            </div>
            <div class="field">
                <label for="endDate">Ends on</label>
                <div class="input-group">
                    <InputDate Type="InputDateType.Date" Value="Request.ScheduledEnd" ValueChanged="(DateTimeOffset v) => UpdateEndDate(DateOnly.FromDateTime(v.DateTime))" ValueExpression="() => Request.ScheduledEnd" class="form-control" id="endDate" />
                    <InputDate Type="InputDateType.Time" Value="Request.ScheduledEnd" ValueChanged="(DateTimeOffset v) => UpdateEndTime(TimeOnly.FromDateTime(v.DateTime))" ValueExpression="() => Request.ScheduledEnd" class="form-control" id="endTime" />
                </div>
                <ValidationMessage For="() => Request.ScheduledEnd" />
            </div>
            <div class="field">
                <label for="instruments">Reserve Instrument(s)</label>
                <div class="d-flex align-items-center">
                    @if (ErrorOrInstruments is { IsError: false, Value: { Length: > 0 } } getInstrumentsResult)
                    {
                        foreach (var instrumentId in Request.InstrumentIds)
                        {
                            var instrument = getInstrumentsResult.Value.Single(i => i.Id == instrumentId);

                            <div class="dropdown d-flex">
                                <button class="p-0 border-0 bg-transparent" style="height: min-content;" type="button" data-bs-toggle="dropdown">
                                    <Badge Class="bg-secondary-subtle text-dark fs-7 me-1">
                                        <span class="icon me-0">
                                            <i class="fa-light fa-xs fa-microscope"></i>
                                        </span>
                                        <span>@instrument.SerialNumber</span>
                                    </Badge>
                                </button>
                                <div class="dropdown-menu p-0 border-0" style="font-size: 0.9rem; max-height: 250px; overflow-y: auto;">
                                    <div class="list-group" style="white-space: nowrap;">
                                        <button class="list-group-item list-group-item-action" type="button" @onclick="() => Request.InstrumentIds.Remove(instrumentId)">
                                            <span class="icon position-relative">
                                                <i class="fa-light fa-microscope"></i>
                                                <span class="position-absolute top-100 start-100 translate-middle badge rounded-pill text-danger">
                                                    <i class="fa-solid fa-circle-xmark fa-sm me-1"></i>
                                                </span>
                                            </span>
                                            <span>Remove instrument @instrument.SerialNumber</span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }

                        var instrumentOptions = getInstrumentsResult.Value.Where(i => !Request.InstrumentIds.Contains(i.Id)).ToList();

                        if (instrumentOptions.Count > 0)
                        {
                            <div class="dropdown d-flex">
                                <button class="p-0 border-0 bg-transparent" style="height: min-content;" type="button" data-bs-toggle="dropdown">
                                    <Badge Class="text-dark bg-primary-subtle fs-7">
                                        <span class="icon me-0">
                                            <i class="fa-light fa-xs fa-plus"></i>
                                        </span>
                                    </Badge>
                                </button>
                                <div class="dropdown-menu p-0 border-0" style="font-size: 0.9rem; max-height: 250px; overflow-y: auto;">
                                    <div class="list-group" style="white-space: nowrap;">
                                        @foreach (var instrument in instrumentOptions)
                                        {
                                            <button class="list-group-item list-group-item-action" type="button" @onclick="() => Request.InstrumentIds.Add(instrument.Id)">
                                                <span class="icon position-relative">
                                                    <i class="fa-light fa-microscope"></i>
                                                    <span class="position-absolute top-100 start-100 translate-middle badge rounded-pill text-primary">
                                                        <i class="fa-solid fa-circle-plus fa-sm me-1"></i>
                                                    </span>
                                                </span>
                                                <span>Add instrument @instrument.SerialNumber</span>
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
        <footer class="modal-footer py-2">
            <SubmitButton>Create Event</SubmitButton>
            <ModalCancelButton />
        </footer>
    </Modal>
</BeaconForm>
